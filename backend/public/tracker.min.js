(function () {
  const VISITOR_KEY = "visitorId";
  let visitorId = localStorage.getItem(VISITOR_KEY);
  if (!visitorId) {
    visitorId =
      "v-" + (crypto.randomUUID?.() || Math.random().toString(36).substring(2));
    localStorage.setItem(VISITOR_KEY, visitorId);
  }

  const scripts = document.getElementsByTagName("script");
  const currentScript = scripts[scripts.length - 1];
  const queryParams = new URLSearchParams(currentScript.src.split("?")[1]);
  const propertyId = queryParams.get("propertyId");

  if (!propertyId) return console.warn("Missing propertyId in script src");

  const domain = location.hostname.replace(/^www\./, "").toLowerCase();

  const basePayload = {
    visitorId,
    propertyId,
    domain,
    userAgent: navigator.userAgent,
    screen: `${screen.width}x${screen.height}`,
    language: navigator.language,
    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,
    referrer: document.referrer,
  };

  // ✅ Step 1: Check if IP is blocked before tracking
  fetch("https://test-miniripple.onrender.com/api/v2/blocked-ip/check", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ propertyId }),
  })
    .then((res) => res.json())
    .then((data) => {
      if (data.blocked) {
        console.warn("Blocked visitor:", data.reason || "No reason provided.");
        if (data.redirectUrl) window.location.href = data.redirectUrl;
        return; // stop further tracking
      } else {
        // ✅ Step 2: Proceed to track visitor
        fetch("https://test-miniripple.onrender.com/api/v2/visitor/track", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(basePayload),
        });
      }
    });
})();
